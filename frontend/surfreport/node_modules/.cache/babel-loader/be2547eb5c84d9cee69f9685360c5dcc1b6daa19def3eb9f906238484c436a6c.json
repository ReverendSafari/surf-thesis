{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg-blue-500 text-white p-4 flex flex-wrap items-center justify-between\"\n};\nconst _hoisted_2 = {\n  class: \"w-full md:w-auto mt-4 md:mt-0 md:ml-4\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"text-gray-700 text-sm\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createCommentVNode(\" Logo \"), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"text-lg font-bold\"\n  }, \"SwellSeeker\", -1 /* HOISTED */)), _createCommentVNode(\" Responsive Beach Selector \"), _createElementVNode(\"div\", _hoisted_2, [$data.beaches.length > 0 ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedBeach = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.onBeachSelected && $options.onBeachSelected(...args)),\n    class: \"bg-white text-gray-700 pl-4 pr-4 py-2 border rounded-lg shadow-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.beaches, beach => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: beach.beach_name,\n      value: beach\n    }, _toDisplayString(beach.beach_name) + \" (\" + _toDisplayString(beach.town) + \") \", 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $data.selectedBeach]]) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Loading beaches...\"))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","$data","beaches","length","_cache","$event","selectedBeach","onChange","args","$options","onBeachSelected","_Fragment","_renderList","beach","beach_name","value","_toDisplayString","town","_hoisted_3","_hoisted_4"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/AppNavbar.vue"],"sourcesContent":["<template>\n  <nav class=\"bg-blue-500 text-white p-4 flex flex-wrap items-center justify-between\">\n    <!-- Logo -->\n    <div class=\"text-lg font-bold\">SwellSeeker</div>\n\n    <!-- Responsive Beach Selector -->\n    <div class=\"w-full md:w-auto mt-4 md:mt-0 md:ml-4\">\n      <select\n        v-if=\"beaches.length > 0\"\n        v-model=\"selectedBeach\"\n        @change=\"onBeachSelected\"\n        class=\"bg-white text-gray-700 pl-4 pr-4 py-2 border rounded-lg shadow-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      >\n        <option v-for=\"beach in beaches\" :key=\"beach.beach_name\" :value=\"beach\">\n          {{ beach.beach_name }} ({{ beach.town }})\n        </option>\n      </select>\n      <div v-else class=\"text-gray-700 text-sm\">Loading beaches...</div>\n    </div>\n  </nav>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: [\"onBeachSelect\"], // Renamed prop to avoid conflict\n  data() {\n    return {\n      beaches: [],\n      selectedBeach: null,\n    };\n  },\n  methods: {\n    async fetchBeaches() {\n      try {\n        const response = await axios.get(\n          \"https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches\"\n        );\n        this.beaches = response.data.beaches;\n\n        if (this.beaches.length > 0) {\n          const queryBeachName = this.$route.query.beach;\n\n          // Match query parameter with the beach list or default to the first beach\n          const matchedBeach = this.beaches.find(\n            (beach) => beach.beach_name === queryBeachName\n          );\n          this.selectedBeach = matchedBeach || this.beaches[0];\n\n          this.onBeachSelect(this.selectedBeach); // Emit to parent\n        }\n      } catch (error) {\n        console.error(\"Error fetching beaches:\", error);\n      }\n    },\n    onBeachSelected() {\n      if (this.selectedBeach) {\n        this.$emit(\"beachSelected\", this.selectedBeach);\n        this.$router.replace({ query: { beach: this.selectedBeach.beach_name } });\n      }\n    },\n  },\n  mounted() {\n    this.fetchBeaches();\n  },\n};\n</script>\n\n<style scoped>\n/* Basic navbar styling */\n.bg-blue-500 {\n  background-color: #0077b6;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAwE;;EAK5EA,KAAK,EAAC;AAAuC;mBANtD;;EAAAC,GAAA;EAiBkBD,KAAK,EAAC;;;uBAhBtBE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,UAAa,E,0BACbC,mBAAA,CAAgD;IAA3CL,KAAK,EAAC;EAAmB,GAAC,aAAW,sBAE1CI,mBAAA,+BAAkC,EAClCC,mBAAA,CAYM,OAZNC,UAYM,GAVIC,KAAA,CAAAC,OAAO,CAACC,MAAM,O,+BADtBP,mBAAA,CASS;IAhBfD,GAAA;IAAA,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASiBJ,KAAA,CAAAK,aAAa,GAAAD,MAAA;IACrBE,QAAM,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IACxBd,KAAK,EAAC;yBAENE,mBAAA,CAESe,SAAA,QAfjBC,WAAA,CAagCX,KAAA,CAAAC,OAAO,EAAhBW,KAAK;yBAApBjB,mBAAA,CAES;MAFyBD,GAAG,EAAEkB,KAAK,CAACC,UAAU;MAAGC,KAAK,EAAEF;wBAC5DA,KAAK,CAACC,UAAU,IAAG,IAAE,GAAAE,gBAAA,CAAGH,KAAK,CAACI,IAAI,IAAG,IAC1C,uBAfRC,UAAA;4FASiBjB,KAAA,CAAAK,aAAa,E,mBAQxBV,mBAAA,CAAkE,OAAlEuB,UAAkE,EAAxB,oBAAkB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}