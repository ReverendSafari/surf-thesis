{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"relative z-10 flex flex-col items-center\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"text-white\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"relative h-30 w-full bg-cover bg-center flex items-center justify-center\",\n    style: _normalizeStyle({\n      backgroundImage: `url(${require('@/assets/beachSelectorBackground.jpg')})`,\n      backgroundPosition: 'center'\n    })\n  }, [_createCommentVNode(\" Overlay for dimming effect on the background image \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"absolute inset-0 bg-black opacity-30\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Centered content with dropdown \"), _createElementVNode(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"text-white text-2xl font-bold mb-4\"\n  }, \"Select Your Beach\", -1 /* HOISTED */)), $data.beaches.length > 0 ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedBeach = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.updateBeach && $options.updateBeach(...args)),\n    class: \"bg-white text-gray-700 px-4 py-2 border rounded-lg shadow-md w-64 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.beaches, beach => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: beach.beach_name,\n      value: beach\n    }, _toDisplayString(beach.beach_name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $data.selectedBeach]]) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Loading beaches...\"))])], 4 /* STYLE */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","style","_normalizeStyle","backgroundImage","require","backgroundPosition","_createCommentVNode","_createElementVNode","_hoisted_1","$data","beaches","length","_cache","$event","selectedBeach","onChange","args","$options","updateBeach","_Fragment","_renderList","beach","beach_name","value","_hoisted_2","_hoisted_3"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/BeachSelector.vue"],"sourcesContent":["<template>\n  <div class=\"relative h-30 w-full bg-cover bg-center flex items-center justify-center\" :style=\"{ backgroundImage: `url(${require('@/assets/beachSelectorBackground.jpg')})`, backgroundPosition: 'center' }\">\n    <!-- Overlay for dimming effect on the background image -->\n    <div class=\"absolute inset-0 bg-black opacity-30\"></div>\n\n    <!-- Centered content with dropdown -->\n    <div class=\"relative z-10 flex flex-col items-center\">\n      <h2 class=\"text-white text-2xl font-bold mb-4\">Select Your Beach</h2>\n\n      <select v-if=\"beaches.length > 0\" v-model=\"selectedBeach\" @change=\"updateBeach\" class=\"bg-white text-gray-700 px-4 py-2 border rounded-lg shadow-md w-64 focus:outline-none focus:ring-2 focus:ring-blue-500\">\n        <option v-for=\"beach in beaches\" :key=\"beach.beach_name\" :value=\"beach\">\n          {{ beach.beach_name }}\n        </option>\n      </select>\n\n      <div v-else class=\"text-white\">Loading beaches...</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      beaches: [],        // Holds the fetched beach data\n      selectedBeach: null, // Now this will hold the full beach object, not just the name\n    };\n  },\n  methods: {\n    // Fetch beaches from the API\n    async fetchBeaches() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        this.beaches = response.data.beaches;\n        if (this.beaches.length > 0) {\n          this.selectedBeach = this.beaches[0]; // Default to the first beach object\n          this.updateBeach(); // Emit the initial selection\n        }\n      } catch (error) {\n        console.error('Error fetching beaches:', error);\n      }\n    },\n    // Emit the entire selected beach object to the parent component\n    updateBeach() {\n      this.$emit('beachSelected', this.selectedBeach);  // Emit full object\n    },\n  },\n  mounted() {\n    // Fetch beaches when the component is mounted\n    this.fetchBeaches();\n  },\n};\n</script>\n\n<style scoped>\n/* Adjust background to focus on the center of the image */\n.bg-cover {\n  background-size: cover;\n  background-position: center;\n}\n</style>\n"],"mappings":";;EAMSA,KAAK,EAAC;AAA0C;mBANzD;;EAAAC,GAAA;EAekBD,KAAK,EAAC;;;uBAdtBE,mBAAA,CAgBM;IAhBDF,KAAK,EAAC,0EAA0E;IAAEG,KAAK,EAD9FC,eAAA;MAAAC,eAAA,SAC0HC,OAAO;MAAAC,kBAAA;IAAA;MAC7HC,mBAAA,wDAA2D,E,0BAC3DC,mBAAA,CAAwD;IAAnDT,KAAK,EAAC;EAAsC,6BAEjDQ,mBAAA,oCAAuC,EACvCC,mBAAA,CAUM,OAVNC,UAUM,G,0BATJD,mBAAA,CAAqE;IAAjET,KAAK,EAAC;EAAoC,GAAC,mBAAiB,sBAElDW,KAAA,CAAAC,OAAO,CAACC,MAAM,O,+BAA5BX,mBAAA,CAIS;IAbfD,GAAA;IAAA,uBAAAa,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASiDJ,KAAA,CAAAK,aAAa,GAAAD,MAAA;IAAGE,QAAM,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAElB,KAAK,EAAC;yBACpFE,mBAAA,CAESmB,SAAA,QAZjBC,WAAA,CAUgCX,KAAA,CAAAC,OAAO,EAAhBW,KAAK;yBAApBrB,mBAAA,CAES;MAFyBD,GAAG,EAAEsB,KAAK,CAACC,UAAU;MAAGC,KAAK,EAAEF;wBAC5DA,KAAK,CAACC,UAAU,wBAX7BE,UAAA;4FASiDf,KAAA,CAAAK,aAAa,E,mBAMxDd,mBAAA,CAAuD,OAAvDyB,UAAuD,EAAxB,oBAAkB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}