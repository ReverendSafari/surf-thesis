{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    beach: String // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      beachName: '',\n      // Stores the beach name\n      town: '',\n      // Stores the beach town\n      state: '' // Stores the beach state\n    };\n  },\n  methods: {\n    // Fetch beach data from the API\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachName = beachData.beach_name;\n          this.town = beachData.town;\n          this.state = beachData.state;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    }\n  },\n  watch: {\n    // Refetch the beach data whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","beach","String","data","beachName","town","state","methods","fetchBeachData","response","get","beachData","beaches","find","b","beach_name","error","console","watch","immediate","handler"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/BeachDisplay.vue"],"sourcesContent":["<template>\n    <div class=\"p-6 border rounded-lg w-full max-w-md text-center mt-4\">\n      <h1 class=\"text-3xl font-bold mb-2\">{{ beachName }}</h1>\n      <p class=\"text-lg\">{{ town }}, {{ state }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: {\n      beach: String,  // Beach name passed from the parent component\n    },\n    data() {\n      return {\n        beachName: '',  // Stores the beach name\n        town: '',       // Stores the beach town\n        state: '',      // Stores the beach state\n      };\n    },\n    methods: {\n      // Fetch beach data from the API\n      async fetchBeachData() {\n        try {\n          const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n          const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n          if (beachData) {\n            this.beachName = beachData.beach_name;\n            this.town = beachData.town;\n            this.state = beachData.state;\n          }\n        } catch (error) {\n          console.error('Error fetching beach data:', error);\n        }\n      },\n    },\n    watch: {\n      // Refetch the beach data whenever the beach changes\n      beach: {\n        immediate: true,\n        handler() {\n          this.fetchBeachData();\n        },\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Basic styling for MVP */\n  </style>\n  "],"mappings":"AAQE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM,CAAG;EAClB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAG;MAChBC,IAAI,EAAE,EAAE;MAAQ;MAChBC,KAAK,EAAE,EAAE,CAAO;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,0EAA0E,CAAC;QAC5G,MAAMC,SAAQ,GAAIF,QAAQ,CAACN,IAAI,CAACS,OAAO,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,UAAS,KAAM,IAAI,CAACd,KAAK,CAAC;QAC9E,IAAIU,SAAS,EAAE;UACb,IAAI,CAACP,SAAQ,GAAIO,SAAS,CAACI,UAAU;UACrC,IAAI,CAACV,IAAG,GAAIM,SAAS,CAACN,IAAI;UAC1B,IAAI,CAACC,KAAI,GAAIK,SAAS,CAACL,KAAK;QAC9B;MACF,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF,CAAC;EACDE,KAAK,EAAE;IACL;IACAjB,KAAK,EAAE;MACLkB,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACZ,cAAc,CAAC,CAAC;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}