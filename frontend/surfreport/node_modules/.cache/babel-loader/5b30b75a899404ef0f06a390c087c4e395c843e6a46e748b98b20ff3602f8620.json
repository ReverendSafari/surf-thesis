{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col items-start\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"w-full\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"mt-6\"\n};\nconst _hoisted_4 = {\n  class: \"text-gray-700\"\n};\nconst _hoisted_5 = {\n  class: \"mt-4\"\n};\nconst _hoisted_6 = {\n  class: \"text-gray-700\"\n};\nconst _hoisted_7 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ApexChart = _resolveComponent(\"ApexChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", {\n    class: \"text-center text-lg font-semibold mb-6 whitespace-nowrap\"\n  }, \"Current Tide\", -1 /* HOISTED */)), _createCommentVNode(\" Tide Chart \"), $data.tides.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_ApexChart, {\n    type: \"line\",\n    options: $data.chartOptions,\n    series: $data.chartSeries,\n    height: \"200\"\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" High and Low Tide Times \"), $data.tides.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"p\", {\n    class: \"text-lg font-bold mb-2 whitespace-nowrap\"\n  }, \"High Tides\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.highTides, tide => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: tide.time\n    }, _toDisplayString($options.formatTime(tide.time)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n    class: \"text-lg font-bold mb-2 whitespace-nowrap\"\n  }, \"Low Tides\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.lowTides, tide => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: tide.time\n    }, _toDisplayString($options.formatTime(tide.time)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"No tide data available.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","tides","length","_hoisted_2","_createVNode","_component_ApexChart","type","options","chartOptions","series","chartSeries","height","_hoisted_3","_hoisted_4","_Fragment","_renderList","$options","highTides","tide","time","formatTime","_hoisted_5","_hoisted_6","lowTides","_hoisted_7","_cache"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/TideComponent.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-start\">\n    <h3 class=\"text-center text-lg font-semibold mb-6 whitespace-nowrap\">Current Tide</h3>\n    \n    <!-- Tide Chart -->\n    <div v-if=\"tides.length > 0\" class=\"w-full\">\n      <ApexChart\n        type=\"line\"\n        :options=\"chartOptions\"\n        :series=\"chartSeries\"\n        height=\"200\"\n      />\n    </div>\n\n    <!-- High and Low Tide Times -->\n    <div v-if=\"tides.length > 0\" class=\"mt-6\">\n      <div>\n        <p class=\"text-lg font-bold mb-2 whitespace-nowrap\">High Tides</p>\n        <ul class=\"text-gray-700\">\n          <li v-for=\"tide in highTides\" :key=\"tide.time\">{{ formatTime(tide.time) }}</li>\n        </ul>\n      </div>\n      <div class=\"mt-4\">\n        <p class=\"text-lg font-bold mb-2 whitespace-nowrap\">Low Tides</p>\n        <ul class=\"text-gray-700\">\n          <li v-for=\"tide in lowTides\" :key=\"tide.time\">{{ formatTime(tide.time) }}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div v-else>\n      <p>No tide data available.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\n\nexport default {\n  components: {\n    ApexChart: VueApexCharts,\n  },\n  props: {\n    beach: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      tides: [],  // Stores the fetched tide data\n      chartSeries: [],\n      chartOptions: {},\n    };\n  },\n  computed: {\n    // Separate high and low tides\n    highTides() {\n      return this.tides.filter(tide => tide.type === 'high');\n    },\n    lowTides() {\n      return this.tides.filter(tide => tide.type === 'low');\n    },\n  },\n  methods: {\n    // Fetch tide data from the API\n    async fetchTides() {\n      if (this.beach) {\n        try {\n          const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/tides/${this.beach}`);\n          this.tides = response.data.tides;\n          this.setupChart();\n        } catch (error) {\n          console.error('Error fetching tides:', error);\n        }\n      }\n    },\n    // Set up the tide chart\n    setupChart() {\n      // Prepare data points for the chart\n      const tideData = this.tides.map(tide => ({\n        x: new Date(tide.time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n        y: tide.height,\n      }));\n\n      // Configure chart series and options\n      this.chartSeries = [\n        {\n          name: 'Tide Height',\n          data: tideData,\n        },\n      ];\n\n      this.chartOptions = {\n        chart: {\n          type: 'line',\n          height: 200,\n        },\n        stroke: {\n          curve: 'smooth', // Creates a sine-like wave\n          width: 2,\n        },\n        xaxis: {\n          type: 'category',\n          labels: {\n            rotate: -45,\n          },\n        },\n        yaxis: {\n          title: {\n            text: 'Height (ft)',\n          },\n        },\n        tooltip: {\n          x: {\n            format: 'HH:mm', // Display time in tooltip\n          },\n        },\n        colors: ['#4A90E2'],\n      };\n    },\n    // Format the tide time for display\n    formatTime(time) {\n      const date = new Date(time);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    },\n  },\n  watch: {\n    // Refetch the tides whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchTides();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;700&display=swap');\n\n* {\n  font-family: 'Plus Jakarta Sans', sans-serif;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;EADxCC,GAAA;EAKiCD,KAAK,EAAC;;;EALvCC,GAAA;EAeiCD,KAAK,EAAC;;;EAG3BA,KAAK,EAAC;AAAe;;EAItBA,KAAK,EAAC;AAAM;;EAEXA,KAAK,EAAC;AAAe;;EAxBjCC,GAAA;AAAA;;;uBACEC,mBAAA,CAgCM,OAhCNC,UAgCM,G,0BA/BJC,mBAAA,CAAsF;IAAlFJ,KAAK,EAAC;EAA0D,GAAC,cAAY,sBAEjFK,mBAAA,gBAAmB,EACRC,KAAA,CAAAC,KAAK,CAACC,MAAM,Q,cAAvBN,mBAAA,CAOM,OAPNO,UAOM,GANJC,YAAA,CAKEC,oBAAA;IAJAC,IAAI,EAAC,MAAM;IACVC,OAAO,EAAEP,KAAA,CAAAQ,YAAY;IACrBC,MAAM,EAAET,KAAA,CAAAU,WAAW;IACpBC,MAAM,EAAC;sDAVfZ,mBAAA,gBAcIA,mBAAA,6BAAgC,EACrBC,KAAA,CAAAC,KAAK,CAACC,MAAM,Q,cAAvBN,mBAAA,CAaM,OAbNgB,UAaM,GAZJd,mBAAA,CAKM,c,0BAJJA,mBAAA,CAAkE;IAA/DJ,KAAK,EAAC;EAA0C,GAAC,YAAU,sBAC9DI,mBAAA,CAEK,MAFLe,UAEK,I,kBADHjB,mBAAA,CAA+EkB,SAAA,QAnBzFC,WAAA,CAmB6BC,QAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAftB,mBAAA,CAA+E;MAAhDD,GAAG,EAAEuB,IAAI,CAACC;wBAASH,QAAA,CAAAI,UAAU,CAACF,IAAI,CAACC,IAAI;sCAG1ErB,mBAAA,CAKM,OALNuB,UAKM,G,0BAJJvB,mBAAA,CAAiE;IAA9DJ,KAAK,EAAC;EAA0C,GAAC,WAAS,sBAC7DI,mBAAA,CAEK,MAFLwB,UAEK,I,kBADH1B,mBAAA,CAA8EkB,SAAA,QAzBxFC,WAAA,CAyB6BC,QAAA,CAAAO,QAAQ,EAAhBL,IAAI;yBAAftB,mBAAA,CAA8E;MAAhDD,GAAG,EAAEuB,IAAI,CAACC;wBAASH,QAAA,CAAAI,UAAU,CAACF,IAAI,CAACC,IAAI;yDAK3EvB,mBAAA,CAEM,OAhCV4B,UAAA,EAAAC,MAAA,QAAAA,MAAA,OA+BM3B,mBAAA,CAA8B,WAA3B,yBAAuB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}