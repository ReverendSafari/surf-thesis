{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle } from \"vue\";\nimport _imports_0 from '@/assets/search.svg';\nconst _hoisted_1 = {\n  class: \"relative z-10 flex flex-col items-center\"\n};\nconst _hoisted_2 = {\n  class: \"relative w-64\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"text-gray-700\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"relative h-20 w-full bg-cover bg-center flex items-center justify-center\",\n    style: _normalizeStyle({\n      backgroundImage: `url(${require('@/assets/selectorBackground.jpg')})`,\n      backgroundPosition: 'center'\n    })\n  }, [_createCommentVNode(\" Overlay for dimming effect on the background image \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"absolute inset-0 bg-black opacity-30\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Centered content with dropdown and integrated search icon \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Icon inside the select box \"), _cache[2] || (_cache[2] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Search icon\",\n    class: \"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Beach Dropdown \"), $data.beaches.length > 0 ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedBeach = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.updateBeach && $options.updateBeach(...args)),\n    class: \"bg-white text-gray-700 pl-10 pr-4 py-2 border rounded-lg shadow-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.beaches, beach => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: beach.beach_name,\n      value: beach\n    }, _toDisplayString(beach.beach_name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $data.selectedBeach]]) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Loading beaches...\"))])])], 4 /* STYLE */);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","style","_normalizeStyle","backgroundImage","require","backgroundPosition","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","src","alt","$data","beaches","length","_cache","$event","selectedBeach","onChange","args","$options","updateBeach","_Fragment","_renderList","beach","beach_name","value","_hoisted_3","_hoisted_4"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/BeachSelector.vue"],"sourcesContent":["<template>\n  <div\n    class=\"relative h-20 w-full bg-cover bg-center flex items-center justify-center\"\n    :style=\"{ backgroundImage: `url(${require('@/assets/selectorBackground.jpg')})`, backgroundPosition: 'center' }\"\n  >\n    <!-- Overlay for dimming effect on the background image -->\n    <div class=\"absolute inset-0 bg-black opacity-30\"></div>\n\n    <!-- Centered content with dropdown and integrated search icon -->\n    <div class=\"relative z-10 flex flex-col items-center\">\n      <div class=\"relative w-64\">\n        <!-- Icon inside the select box -->\n        <img src=\"@/assets/search.svg\" alt=\"Search icon\" class=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n        \n        <!-- Beach Dropdown -->\n        <select\n          v-if=\"beaches.length > 0\"\n          v-model=\"selectedBeach\"\n          @change=\"updateBeach\"\n          class=\"bg-white text-gray-700 pl-10 pr-4 py-2 border rounded-lg shadow-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <option v-for=\"beach in beaches\" :key=\"beach.beach_name\" :value=\"beach\">\n            {{ beach.beach_name }}\n          </option>\n        </select>\n        \n        <div v-else class=\"text-gray-700\">Loading beaches...</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      beaches: [],         // Holds the fetched beach data\n      selectedBeach: null, // Stores the selected beach object\n    };\n  },\n  methods: {\n    // Fetch beaches from the API\n    async fetchBeaches() {\n  try {\n    const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n    this.beaches = response.data.beaches;\n\n    if (this.beaches.length > 0) {\n      this.selectedBeach = null; // Don't auto-select the first beach\n    }\n  } catch (error) {\n    console.error('Error fetching beaches:', error);\n  }\n},\n\n    // Update the URL and emit the selected beach\n    updateBeach() {\n      if (this.selectedBeach) {\n        // Update the URL with the selected beach's name\n        this.$router.replace({ query: { beach: this.selectedBeach.beach_name } });\n\n        // Emit the selected beach object to the parent component\n        this.$emit('beachSelected', this.selectedBeach);\n      }\n    },\n  },\n  mounted() {\n    // Fetch beaches when the component is mounted\n    this.fetchBeaches();\n\n    // Handle initial beach selection from URL\n    const beachFromQuery = this.$route.query.beach;\n    if (beachFromQuery) {\n      const matchingBeach = this.beaches.find(beach => beach.beach_name === beachFromQuery);\n      if (matchingBeach) {\n        this.selectedBeach = matchingBeach;\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Adjust background to focus on the center of the image */\n.bg-cover {\n  background-size: cover;\n  background-position: center bottom;\n}\n</style>\n"],"mappings":";OAYaA,UAAyB;;EAH7BC,KAAK,EAAC;AAA0C;;EAC9CA,KAAK,EAAC;AAAe;mBAVhC;;EAAAC,GAAA;EA0BoBD,KAAK,EAAC;;;uBAzBxBE,mBAAA,CA4BM;IA3BJF,KAAK,EAAC,0EAA0E;IAC/EG,KAAK,EAHVC,eAAA;MAAAC,eAAA,SAGsCC,OAAO;MAAAC,kBAAA;IAAA;MAEzCC,mBAAA,wDAA2D,E,0BAC3DC,mBAAA,CAAwD;IAAnDT,KAAK,EAAC;EAAsC,6BAEjDQ,mBAAA,+DAAkE,EAClEC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJD,mBAAA,CAiBM,OAjBNE,UAiBM,GAhBJH,mBAAA,gCAAmC,E,0BACnCC,mBAAA,CAAoI;IAA/HG,GAAyB,EAAzBb,UAAyB;IAACc,GAAG,EAAC,aAAa;IAACb,KAAK,EAAC;+BAEvDQ,mBAAA,oBAAuB,EAEfM,KAAA,CAAAC,OAAO,CAACC,MAAM,O,+BADtBd,mBAAA,CASS;IAxBjBD,GAAA;IAAA,uBAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBmBJ,KAAA,CAAAK,aAAa,GAAAD,MAAA;IACrBE,QAAM,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IACpBrB,KAAK,EAAC;yBAENE,mBAAA,CAESsB,SAAA,QAvBnBC,WAAA,CAqBkCX,KAAA,CAAAC,OAAO,EAAhBW,KAAK;yBAApBxB,mBAAA,CAES;MAFyBD,GAAG,EAAEyB,KAAK,CAACC,UAAU;MAAGC,KAAK,EAAEF;wBAC5DA,KAAK,CAACC,UAAU,wBAtB/BE,UAAA;4FAiBmBf,KAAA,CAAAK,aAAa,E,mBASxBjB,mBAAA,CAA0D,OAA1D4B,UAA0D,EAAxB,oBAAkB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}