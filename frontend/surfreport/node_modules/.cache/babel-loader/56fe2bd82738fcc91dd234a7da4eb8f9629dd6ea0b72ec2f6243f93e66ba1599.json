{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-6 border rounded-lg w-full max-w-md text-center mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"text-xl mb-4\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h3\", _hoisted_2, \"Current Wave Information for \" + _toDisplayString($props.beach), 1 /* TEXT */), _createCommentVNode(\" Check if wave data is available \"), $data.closestWave ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Wave Height:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.waveHeightRange) + \" (\" + _toDisplayString($data.closestWave.height) + \" ft)\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Wave Period:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.closestWave.period) + \" seconds\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Wave Direction:\", -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createTextVNode()), _createElementVNode(\"span\", {\n    style: _normalizeStyle({\n      transform: 'rotate(' + $data.closestWave.direction + 'deg)'\n    })\n  }, \"↑\", 4 /* STYLE */)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[4] || (_cache[4] = [_createElementVNode(\"p\", null, \"No wave data available.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$props","beach","_createCommentVNode","$data","closestWave","_hoisted_3","_createTextVNode","$options","waveHeightRange","height","period","style","_normalizeStyle","transform","direction","_hoisted_4","_cache"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/CurrentWaveComponent.vue"],"sourcesContent":["<template>\n    <div class=\"p-6 border rounded-lg w-full max-w-md text-center mt-4\">\n      <h3 class=\"text-xl mb-4\">Current Wave Information for {{ beach }}</h3>\n  \n      <!-- Check if wave data is available -->\n      <div v-if=\"closestWave\">\n        <p><strong>Wave Height:</strong> {{ waveHeightRange }} ({{ closestWave.height }} ft)</p>\n        <p><strong>Wave Period:</strong> {{ closestWave.period }} seconds</p>\n        <p><strong>Wave Direction:</strong> <span :style=\"{transform: 'rotate(' + closestWave.direction + 'deg)'}\">↑</span></p>\n      </div>\n  \n      <div v-else>\n        <p>No wave data available.</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: {\n      beach: String,  // Beach name passed from the parent component\n    },\n    data() {\n      return {\n        waveData: [],  // Stores the fetched wave data\n        closestWave: null,  // Stores the closest wave data to the current time\n      };\n    },\n    computed: {\n      // Compute the wave height range\n      waveHeightRange() {\n        const height = this.closestWave.height;\n        if (height < 1) return 'Flat';\n        if (height < 2) return '1-2 ft';\n        if (height < 3) return '2-3 ft';\n        if (height < 4) return '3-4 ft';\n        if (height < 6) return '4-6 ft';\n        return '6+ ft';\n      },\n    },\n    methods: {\n      // Fetch wave data from the API\n      async fetchWaves() {\n        try {\n          const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/waves/${this.beach}`);\n          const waveData = JSON.parse(response.data.waves);\n          const closestTimeIndex = this.findClosestTimeIndex(waveData.hourly.time);\n          this.closestWave = {\n            time: waveData.hourly.time[closestTimeIndex],\n            height: waveData.hourly.wave_height[closestTimeIndex],\n            direction: waveData.hourly.wave_direction[closestTimeIndex],\n            period: waveData.hourly.wave_period[closestTimeIndex],\n          };\n        } catch (error) {\n          console.error('Error fetching wave data:', error);\n        }\n      },\n      // Find the closest time index to the current time (EST)\n      findClosestTimeIndex(times) {\n        const currentTime = new Date();  // Get current time\n        const timeDifferences = times.map(time => {\n          const waveTime = new Date(time);\n          return Math.abs(waveTime - currentTime);  // Calculate the difference in milliseconds\n        });\n        return timeDifferences.indexOf(Math.min(...timeDifferences));  // Find the index with the smallest difference\n      },\n    },\n    watch: {\n      // Refetch the wave data whenever the beach changes\n      beach: {\n        immediate: true,\n        handler() {\n          this.fetchWaves();\n        },\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Basic styling for MVP */\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAwD;;EAC7DA,KAAK,EAAC;AAAc;;EAF9BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAAsE,MAAtEC,UAAsE,EAA7C,+BAA6B,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,KAAK,kBAE9DC,mBAAA,qCAAwC,EAC7BC,KAAA,CAAAC,WAAW,I,cAAtBT,mBAAA,CAIM,OATZU,UAAA,GAMQR,mBAAA,CAAwF,Y,0BAArFA,mBAAA,CAA6B,gBAArB,cAAY,sBAN/BS,gBAAA,CAMwC,GAAC,GAAAP,gBAAA,CAAGQ,QAAA,CAAAC,eAAe,IAAG,IAAE,GAAAT,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACK,MAAM,IAAG,MAAI,gB,GACpFZ,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAA6B,gBAArB,cAAY,sBAP/BS,gBAAA,CAOwC,GAAC,GAAAP,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACM,MAAM,IAAG,UAAQ,gB,GACjEb,mBAAA,CAAuH,Y,0BAApHA,mBAAA,CAAgC,gBAAxB,iBAAe,sB,0BARlCS,gBAAA,KAQ4CT,mBAAA,CAA+E;IAAxEc,KAAK,EARxDC,eAAA;MAAAC,SAAA,cAQkFV,KAAA,CAAAC,WAAW,CAACU,SAAS;IAAA;KAAY,GAAC,iB,sBAG9GnB,mBAAA,CAEM,OAbZoB,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAYQnB,mBAAA,CAA8B,WAA3B,yBAAuB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}