{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    beach: String // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      airTemp: null,\n      // Stores air temperature\n      waterTemp: null // Stores water temperature\n    };\n  },\n  methods: {\n    // Fetch temperature data from the API\n    async fetchTemps() {\n      try {\n        const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/temps/${this.beach}`);\n        this.airTemp = response.data.air_temp;\n        this.waterTemp = response.data.water_temp;\n      } catch (error) {\n        console.error('Error fetching temperature data:', error);\n      }\n    }\n  },\n  watch: {\n    // Refetch the temperature data whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchTemps();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","beach","String","data","airTemp","waterTemp","methods","fetchTemps","response","get","air_temp","water_temp","error","console","watch","immediate","handler"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/TemperatureComponent.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-start\">\n    <h3 class=\"text-sm font-semibold mb-1\">Temperature</h3>\n    <!-- Check if we have temperature data -->\n    <div v-if=\"airTemp !== null && waterTemp !== null\">\n      <p class=\"text-gray-600\">Air temperature</p>\n      <p class=\"text-2xl font-bold mb-4\">{{ airTemp }}°F</p>\n      <p class=\"text-gray-600\">Water temperature</p>\n      <p class=\"text-2xl font-bold\">{{ waterTemp }}°F</p>\n    </div>\n    <div v-else>\n      <p>No temperature data available.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    beach: String,  // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      airTemp: null,    // Stores air temperature\n      waterTemp: null,  // Stores water temperature\n    };\n  },\n  methods: {\n    // Fetch temperature data from the API\n    async fetchTemps() {\n      try {\n        const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/temps/${this.beach}`);\n        this.airTemp = response.data.air_temp;\n        this.waterTemp = response.data.water_temp;\n      } catch (error) {\n        console.error('Error fetching temperature data:', error);\n      }\n    },\n  },\n  watch: {\n    // Refetch the temperature data whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchTemps();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;700&display=swap');\n\n* {\n  font-family: 'Plus Jakarta Sans', sans-serif;\n}\n</style>\n"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM,CAAG;EAClB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MAAK;MAClBC,SAAS,EAAE,IAAI,CAAG;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,0EAA0E,IAAI,CAACR,KAAK,EAAE,CAAC;QACxH,IAAI,CAACG,OAAM,GAAII,QAAQ,CAACL,IAAI,CAACO,QAAQ;QACrC,IAAI,CAACL,SAAQ,GAAIG,QAAQ,CAACL,IAAI,CAACQ,UAAU;MAC3C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EACF,CAAC;EACDE,KAAK,EAAE;IACL;IACAb,KAAK,EAAE;MACLc,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACT,UAAU,CAAC,CAAC;MACnB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}