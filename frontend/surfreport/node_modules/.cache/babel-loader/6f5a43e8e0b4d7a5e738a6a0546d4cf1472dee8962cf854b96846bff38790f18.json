{"ast":null,"code":"import Navbar from \"./AppNavbar.vue\";\nimport BeachSelector from \"./BeachSelector.vue\";\nimport DailyComponent from \"./DailyComponent.vue\";\nimport WeeklyWaveComponent from \"./WeeklyWaveComponent.vue\";\nimport BeachAndMapDisplay from \"./BeachAndMapDisplay.vue\";\nexport default {\n  name: \"DashboardPage\",\n  components: {\n    Navbar,\n    BeachSelector,\n    DailyComponent,\n    WeeklyWaveComponent,\n    BeachAndMapDisplay\n  },\n  data() {\n    return {\n      selectedBeach: null,\n      isLoading: false // New loading state\n    };\n  },\n  methods: {\n    async setSelectedBeach(beach) {\n      this.selectedBeach = beach;\n      this.isLoading = true; // Start loading\n      try {\n        await this.fetchAllComponentsData(); // Replace with actual fetch functions if necessary\n      } finally {\n        this.isLoading = false; // Stop loading after fetching is done\n      }\n    },\n    async fetchAllComponentsData() {\n      // Add logic here to fetch any data for child components\n      return new Promise(resolve => setTimeout(resolve, 1000)); // Simulated delay\n    }\n  }\n};","map":{"version":3,"names":["Navbar","BeachSelector","DailyComponent","WeeklyWaveComponent","BeachAndMapDisplay","name","components","data","selectedBeach","isLoading","methods","setSelectedBeach","beach","fetchAllComponentsData","Promise","resolve","setTimeout"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/DashboardPage.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col h-screen pb-5\">\n    <!-- Navbar Component -->\n    <Navbar />\n\n    <!-- Full-width Beach Selector Component -->\n    <BeachSelector @beachSelected=\"setSelectedBeach\" class=\"w-full mb-3\" />\n\n    <div class=\"flex flex-col lg:flex-row lg:space-x-6 w-full relative flex-grow lg:overflow-hidden px-4 lg:px-6\">\n      <!-- Loading Overlay -->\n      <div\n        v-if=\"isLoading\"\n        class=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90 z-10\"\n      >\n        <div class=\"loader\"></div> <!-- Spinner -->\n        <p class=\"ml-4 text-lg font-semibold\">Loading...</p>\n      </div>\n\n      <!-- Left Column: BeachAndMapDisplay -->\n      <div class=\"w-full lg:w-1/5 mb-2 flex-shrink-0 overflow-hidden\">\n        <div class=\"h-full overflow-y-auto\">\n          <BeachAndMapDisplay\n            v-if=\"selectedBeach\"\n            :beach=\"selectedBeach.beach_name\"\n            class=\"w-full\"\n          />\n        </div>\n      </div>\n\n      <!-- Right Column: Main Content -->\n      <div class=\"flex flex-col space-y-3 w-full lg:w-4/5 overflow-hidden\">\n        <div class=\"flex-grow overflow-y-auto\">\n          <DailyComponent\n            v-if=\"selectedBeach\"\n            :beach=\"selectedBeach\"\n            class=\"w-full\"\n          />\n        </div>\n        <div class=\"flex-grow overflow-y-auto\">\n          <WeeklyWaveComponent\n            v-if=\"selectedBeach\"\n            :key=\"selectedBeach.beach_name\"\n            :beach=\"selectedBeach.beach_name\"\n            :beachAngle=\"selectedBeach.beach_angle\"\n            class=\"w-full\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"./AppNavbar.vue\";\nimport BeachSelector from \"./BeachSelector.vue\";\nimport DailyComponent from \"./DailyComponent.vue\";\nimport WeeklyWaveComponent from \"./WeeklyWaveComponent.vue\";\nimport BeachAndMapDisplay from \"./BeachAndMapDisplay.vue\";\n\nexport default {\n  name: \"DashboardPage\",\n  components: {\n    Navbar,\n    BeachSelector,\n    DailyComponent,\n    WeeklyWaveComponent,\n    BeachAndMapDisplay,\n  },\n  data() {\n    return {\n      selectedBeach: null,\n      isLoading: false, // New loading state\n    };\n  },\n  methods: {\n    async setSelectedBeach(beach) {\n      this.selectedBeach = beach;\n      this.isLoading = true; // Start loading\n      try {\n        await this.fetchAllComponentsData(); // Replace with actual fetch functions if necessary\n      } finally {\n        this.isLoading = false; // Stop loading after fetching is done\n      }\n    },\n    async fetchAllComponentsData() {\n      // Add logic here to fetch any data for child components\n      return new Promise((resolve) => setTimeout(resolve, 1000)); // Simulated delay\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Full height for the screen */\n.h-screen {\n  height: 100vh; /* Full viewport height */\n}\n\n/* Grow elements to fill available space */\n.flex-grow {\n  flex-grow: 1; /* Allow elements to grow to fill available space */\n}\n\n/* Prevent horizontal and vertical overflow */\n.overflow-hidden {\n  overflow: hidden;\n}\n\n/* Enable vertical scrolling */\n.overflow-y-auto {\n  overflow-y: auto;\n}\n\n/* Add padding at the bottom */\n.pb-5 {\n  padding-bottom: 1.25rem;\n}\n\n/* Add padding to the left and right of the body */\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n@media (min-width: 1024px) {\n  .px-6 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n\n/* Loader animation */\n.loader {\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"],"mappings":"AAqDA,OAAOA,MAAK,MAAO,iBAAiB;AACpC,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,cAAa,MAAO,sBAAsB;AACjD,OAAOC,mBAAkB,MAAO,2BAA2B;AAC3D,OAAOC,kBAAiB,MAAO,0BAA0B;AAEzD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVN,MAAM;IACNC,aAAa;IACbC,cAAc;IACdC,mBAAmB;IACnBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAACC,KAAK,EAAE;MAC5B,IAAI,CAACJ,aAAY,GAAII,KAAK;MAC1B,IAAI,CAACH,SAAQ,GAAI,IAAI,EAAE;MACvB,IAAI;QACF,MAAM,IAAI,CAACI,sBAAsB,CAAC,CAAC,EAAE;MACvC,UAAU;QACR,IAAI,CAACJ,SAAQ,GAAI,KAAK,EAAE;MAC1B;IACF,CAAC;IACD,MAAMI,sBAAsBA,CAAA,EAAG;MAC7B;MACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}