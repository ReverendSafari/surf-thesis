{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { getWaveQuality } from '../utils/waveGrading.js';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default {\n  components: {\n    ApexChart: VueApexCharts\n  },\n  props: {\n    beach: String,\n    beachAngle: Number\n  },\n  data() {\n    return {\n      waveData: [],\n      windData: [],\n      chartSeries: [],\n      chartOptions: {}\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const waveResponse = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/waves/${this.beach}`);\n        const windResponse = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/wind/${this.beach}`);\n        const waveData = JSON.parse(waveResponse.data.waves);\n        const windData = JSON.parse(windResponse.data.wind);\n        this.waveData = waveData.hourly;\n        this.windData = windData.hourly;\n        this.setupChart();\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    },\n    setupChart() {\n      const waveHeights = this.waveData.wave_height;\n      const colors = waveHeights.map((height, index) => {\n        const windSpeed = this.windData.wind_speed_10m[index];\n        const windDirection = this.windData.wind_direction_10m[index];\n        const wavePeriod = this.waveData.wave_period[index];\n        const beachAngle = this.beachAngle || 120;\n        const waveGrade = getWaveQuality(windDirection, windSpeed, wavePeriod, beachAngle, height);\n        return waveGrade === 'green' ? '#2ecc71' : waveGrade === 'yellow' ? '#f1c40f' : '#e74c3c';\n      });\n      const labels = this.waveData.time.map(time => {\n        const date = new Date(time);\n        return date.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      });\n      const days = [];\n      for (let i = 0; i < labels.length; i += 8) {\n        const date = new Date(this.waveData.time[i]);\n        const dayLabel = date.toLocaleDateString('en-US', {\n          weekday: 'short',\n          month: 'short',\n          day: 'numeric'\n        });\n        days.push({\n          title: dayLabel,\n          cols: 8\n        });\n      }\n      this.chartSeries = [{\n        name: 'Wave Height (ft)',\n        data: waveHeights\n      }];\n      this.chartOptions = {\n        chart: {\n          type: 'bar'\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 4,\n            distributed: true\n          }\n        },\n        xaxis: {\n          categories: labels,\n          tickPlacement: 'on',\n          group: {\n            style: {\n              fontSize: '10px',\n              fontWeight: 700\n            },\n            groups: days // Set up day groupings on the x-axis\n          }\n        },\n        colors: colors,\n        tooltip: {\n          custom: ({\n            dataPointIndex\n          }) => {\n            const waveHeight = this.waveData.wave_height[dataPointIndex];\n            const wavePeriod = this.waveData.wave_period[dataPointIndex];\n            const windSpeed = this.windData.wind_speed_10m[dataPointIndex];\n            const windDirectionDegrees = this.windData.wind_direction_10m[dataPointIndex];\n            const windDirectionCardinal = this.convertDegreesToCardinal(windDirectionDegrees);\n            const date = new Date(this.waveData.time[dataPointIndex]);\n            const dayLabel = date.toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            });\n            const timeLabel = date.toLocaleTimeString('en-US', {\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n            return `<div style=\"padding:8px; border-radius: 4px; background: #fff;\">\n              <div style=\"font-weight: bold; font-size: 14px; margin-bottom: 6px;\">\n                ${dayLabel}, ${timeLabel}\n              </div>\n              <strong>Height:</strong> ${waveHeight} ft<br>\n              <strong>Period:</strong> ${wavePeriod} s<br>\n              <strong>Wind Speed:</strong> ${windSpeed} kn<br>\n              <strong>Wind Direction:</strong> ${windDirectionCardinal} (${windDirectionDegrees}Â°)\n            </div>`;\n          }\n        },\n        legend: {\n          show: false // Removes the legend\n        },\n        dataLabels: {\n          enabled: false // Removes labels on bars\n        }\n      };\n    },\n    convertDegreesToCardinal(degrees) {\n      const directions = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n      const index = Math.round(degrees % 360 / 22.5);\n      return directions[index];\n    }\n  }\n};","map":{"version":3,"names":["axios","getWaveQuality","VueApexCharts","components","ApexChart","props","beach","String","beachAngle","Number","data","waveData","windData","chartSeries","chartOptions","mounted","fetchData","methods","waveResponse","get","windResponse","JSON","parse","waves","wind","hourly","setupChart","error","console","waveHeights","wave_height","colors","map","height","index","windSpeed","wind_speed_10m","windDirection","wind_direction_10m","wavePeriod","wave_period","waveGrade","labels","time","date","Date","toLocaleTimeString","hour","minute","days","i","length","dayLabel","toLocaleDateString","weekday","month","day","push","title","cols","name","chart","type","plotOptions","bar","borderRadius","distributed","xaxis","categories","tickPlacement","group","style","fontSize","fontWeight","groups","tooltip","custom","dataPointIndex","waveHeight","windDirectionDegrees","windDirectionCardinal","convertDegreesToCardinal","timeLabel","legend","show","dataLabels","enabled","degrees","directions","Math","round"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/WeeklyWaveComponent.vue"],"sourcesContent":["<template>\n  <div class=\"p-4 border rounded-lg bg-white shadow-md mx-auto\" style=\"height: 520px;\">\n    <!-- Optional Card Header (remove or adjust as needed) -->\n    <h3 class=\"text-lg font-semibold mb-2\">Weekly Wave Forecast</h3>\n\n    <!-- Chart Container -->\n    <div class=\"h-full\">\n      <ApexChart\n        type=\"bar\"\n        :options=\"chartOptions\"\n        :series=\"chartSeries\"\n        height=\"450\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { getWaveQuality } from '../utils/waveGrading.js';\nimport VueApexCharts from 'vue3-apexcharts';\n\nexport default {\n  components: {\n    ApexChart: VueApexCharts,\n  },\n  props: {\n    beach: String,\n    beachAngle: Number,\n  },\n  data() {\n    return {\n      waveData: [],\n      windData: [],\n      chartSeries: [],\n      chartOptions: {},\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const waveResponse = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/waves/${this.beach}`);\n        const windResponse = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/wind/${this.beach}`);\n        const waveData = JSON.parse(waveResponse.data.waves);\n        const windData = JSON.parse(windResponse.data.wind);\n\n        this.waveData = waveData.hourly;\n        this.windData = windData.hourly;\n\n        this.setupChart();\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    },\n    setupChart() {\n      const waveHeights = this.waveData.wave_height;\n      const colors = waveHeights.map((height, index) => {\n        const windSpeed = this.windData.wind_speed_10m[index];\n        const windDirection = this.windData.wind_direction_10m[index];\n        const wavePeriod = this.waveData.wave_period[index];\n        const beachAngle = this.beachAngle || 120;\n        const waveGrade = getWaveQuality(windDirection, windSpeed, wavePeriod, beachAngle, height);\n        return waveGrade === 'green' ? '#2ecc71' : waveGrade === 'yellow' ? '#f1c40f' : '#e74c3c';\n      });\n\n      const labels = this.waveData.time.map((time) => {\n        const date = new Date(time);\n        return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\n      });\n\n      const days = [];\n      for (let i = 0; i < labels.length; i += 8) {\n        const date = new Date(this.waveData.time[i]);\n        const dayLabel = date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n        days.push({ title: dayLabel, cols: 8 });\n      }\n\n      this.chartSeries = [\n        {\n          name: 'Wave Height (ft)',\n          data: waveHeights,\n        },\n      ];\n\n      this.chartOptions = {\n        chart: {\n          type: 'bar',\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 4,\n            distributed: true,\n          },\n        },\n        xaxis: {\n          categories: labels,\n          tickPlacement: 'on',\n          group: {\n            style: {\n              fontSize: '10px',\n              fontWeight: 700,\n            },\n            groups: days, // Set up day groupings on the x-axis\n          },\n        },\n        colors: colors,\n        tooltip: {\n          custom: ({ dataPointIndex }) => {\n            const waveHeight = this.waveData.wave_height[dataPointIndex];\n            const wavePeriod = this.waveData.wave_period[dataPointIndex];\n            const windSpeed = this.windData.wind_speed_10m[dataPointIndex];\n            const windDirectionDegrees = this.windData.wind_direction_10m[dataPointIndex];\n            const windDirectionCardinal = this.convertDegreesToCardinal(windDirectionDegrees);\n\n            const date = new Date(this.waveData.time[dataPointIndex]);\n            const dayLabel = date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n            const timeLabel = date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\n\n            return `<div style=\"padding:8px; border-radius: 4px; background: #fff;\">\n              <div style=\"font-weight: bold; font-size: 14px; margin-bottom: 6px;\">\n                ${dayLabel}, ${timeLabel}\n              </div>\n              <strong>Height:</strong> ${waveHeight} ft<br>\n              <strong>Period:</strong> ${wavePeriod} s<br>\n              <strong>Wind Speed:</strong> ${windSpeed} kn<br>\n              <strong>Wind Direction:</strong> ${windDirectionCardinal} (${windDirectionDegrees}Â°)\n            </div>`;\n          },\n        },\n        legend: {\n          show: false, // Removes the legend\n        },\n        dataLabels: {\n          enabled: false, // Removes labels on bars\n        },\n      };\n    },\n    convertDegreesToCardinal(degrees) {\n      const directions = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n      const index = Math.round((degrees % 360) / 22.5);\n      return directions[index];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.hover-details {\n  margin-top: 20px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  background-color: #f9f9f9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}