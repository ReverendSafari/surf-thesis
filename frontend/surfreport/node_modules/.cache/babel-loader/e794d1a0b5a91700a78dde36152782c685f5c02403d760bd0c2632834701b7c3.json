{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      beaches: [],\n      // Holds the fetched beach data\n      selectedBeach: '' // Holds the selected beach\n    };\n  },\n  methods: {\n    // Fetch beaches from the API\n    async fetchBeaches() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        this.beaches = response.data.beaches;\n        if (this.beaches.length > 0) {\n          this.selectedBeach = this.beaches[0].beach_name; // Default to the first beach\n          this.updateBeach(); // Emit the initial selection\n        }\n      } catch (error) {\n        console.error('Error fetching beaches:', error);\n      }\n    },\n    // Emit the selected beach name to the parent component\n    updateBeach() {\n      this.$emit('beachSelected', this.selectedBeach);\n    }\n  },\n  mounted() {\n    // Fetch beaches when the component is mounted\n    this.fetchBeaches();\n  }\n};","map":{"version":3,"names":["axios","data","beaches","selectedBeach","methods","fetchBeaches","response","get","length","beach_name","updateBeach","error","console","$emit","mounted"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/beachSelector.vue"],"sourcesContent":["<template>\n    <div class=\"mb-6\">\n      <label for=\"beach\" class=\"block mb-2\">Select Beach</label>\n      <select v-if=\"beaches.length > 0\" v-model=\"selectedBeach\" @change=\"updateBeach\" class=\"p-2 border\">\n        <option v-for=\"beach in beaches\" :key=\"beach.beach_name\" :value=\"beach.beach_name\">\n          {{ beach.beach_name }}\n        </option>\n      </select>\n      <div v-else>\n        <p>Loading beaches...</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        beaches: [],       // Holds the fetched beach data\n        selectedBeach: '', // Holds the selected beach\n      };\n    },\n    methods: {\n      // Fetch beaches from the API\n      async fetchBeaches() {\n        try {\n          const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n          this.beaches = response.data.beaches;\n          if (this.beaches.length > 0) {\n            this.selectedBeach = this.beaches[0].beach_name; // Default to the first beach\n            this.updateBeach(); // Emit the initial selection\n          }\n        } catch (error) {\n          console.error('Error fetching beaches:', error);\n        }\n      },\n      // Emit the selected beach name to the parent component\n      updateBeach() {\n        this.$emit('beachSelected', this.selectedBeach);\n      },\n    },\n    mounted() {\n      // Fetch beaches when the component is mounted\n      this.fetchBeaches();\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Simple styling for MVP */\n  </style>\n  "],"mappings":"AAeE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAQ;MACnBC,aAAa,EAAE,EAAE,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,0EAA0E,CAAC;QAC5G,IAAI,CAACL,OAAM,GAAII,QAAQ,CAACL,IAAI,CAACC,OAAO;QACpC,IAAI,IAAI,CAACA,OAAO,CAACM,MAAK,GAAI,CAAC,EAAE;UAC3B,IAAI,CAACL,aAAY,GAAI,IAAI,CAACD,OAAO,CAAC,CAAC,CAAC,CAACO,UAAU,EAAE;UACjD,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;QACtB;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACD;IACAD,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACG,KAAK,CAAC,eAAe,EAAE,IAAI,CAACV,aAAa,CAAC;IACjD;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACT,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}