{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col items-start\"\n};\nconst _hoisted_2 = {\n  class: \"text-gray-700\"\n};\nconst _hoisted_3 = {\n  class: \"text-gray-700\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-semibold mb-2\"\n  }, \"Sunrise & Sunset\", -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createElementVNode(\"i\", {\n    class: \"fa-solid fa-moon\",\n    style: {\n      \"color\": \"#1a5fb4\"\n    }\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Sunrise:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.sunriseTime), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Sunset:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.sunsetTime), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","style","_hoisted_2","_createTextVNode","_toDisplayString","$data","sunriseTime","_hoisted_3","sunsetTime"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/SunriseSunsetComponent.vue"],"sourcesContent":["<!-- SunriseSunsetComponent.vue -->\n<template>\n    <div class=\"flex flex-col items-start\">\n      <h3 class=\"text-lg font-semibold mb-2\">Sunrise & Sunset</h3>\n      <i class=\"fa-solid fa-moon\" style=\"color: #1a5fb4;\"></i>\n      <p class=\"text-gray-700\"><strong>Sunrise:</strong> {{ sunriseTime }}</p>\n      <p class=\"text-gray-700\"><strong>Sunset:</strong> {{ sunsetTime }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: {\n      lat: {\n        type: Number,\n        required: true,\n      },\n      long: {\n        type: Number,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        sunriseTime: '',\n        sunsetTime: '',\n      };\n    },\n    mounted() {\n      this.fetchSunriseSunset();\n    },\n    methods: {\n      async fetchSunriseSunset() {\n        try {\n          const response = await axios.get(\n            `https://api.sunrise-sunset.org/json?lat=${this.lat}&lng=${this.long}&formatted=0`\n          );\n          const { sunrise, sunset } = response.data.results;\n          this.sunriseTime = this.formatTime(sunrise);\n          this.sunsetTime = this.formatTime(sunset);\n        } catch (error) {\n          console.error('Error fetching sunrise and sunset times:', error);\n        }\n      },\n      formatTime(utcTime) {\n        const date = new Date(utcTime);\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* You can add custom styles here */\n  </style>\n  "],"mappings":";;EAESA,KAAK,EAAC;AAA2B;;EAGjCA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAe;;uBAJ1BC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJC,mBAAA,CAA4D;IAAxDH,KAAK,EAAC;EAA4B,GAAC,kBAAgB,sB,0BACvDG,mBAAA,CAAwD;IAArDH,KAAK,EAAC,kBAAkB;IAACI,KAAuB,EAAvB;MAAA;IAAA;+BAC5BD,mBAAA,CAAwE,KAAxEE,UAAwE,G,0BAA/CF,mBAAA,CAAyB,gBAAjB,UAAQ,sBAL/CG,gBAAA,CAKwD,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,iB,GACjEN,mBAAA,CAAsE,KAAtEO,UAAsE,G,0BAA7CP,mBAAA,CAAwB,gBAAhB,SAAO,sBAN9CG,gBAAA,CAMuD,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAG,UAAU,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}