{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col items-start\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"text-2xl font-bold mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"text-2xl font-bold\"\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", {\n    class: \"text-center text-lg font-semibold mb-6\"\n  }, \"Temperature\", -1 /* HOISTED */)), $data.airTemp !== null && $data.waterTemp !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"p\", {\n    class: \"text-gray-600 whitespace-nowrap\"\n  }, \"Air temperature\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($data.airTemp) + \"째F\", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n    class: \"text-gray-600 whitespace-nowrap\"\n  }, \"Water temperature\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_4, _toDisplayString($data.waterTemp) + \"째F\", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"No temperature data available.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","airTemp","waterTemp","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","_cache"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/TemperatureComponent.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-start\">\n    <h3 class=\"text-center text-lg font-semibold mb-6\">Temperature</h3>\n    <div v-if=\"airTemp !== null && waterTemp !== null\">\n      <p class=\"text-gray-600 whitespace-nowrap\">Air temperature</p>\n      <p class=\"text-2xl font-bold mb-4\">{{ airTemp }}째F</p>\n      <p class=\"text-gray-600 whitespace-nowrap\">Water temperature</p>\n      <p class=\"text-2xl font-bold\">{{ waterTemp }}째F</p>\n    </div>\n    <div v-else>\n      <p>No temperature data available.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    beach: {\n      type: Object,\n      required: true\n    },\n  },\n  data() {\n    return {\n      airTemp: null,\n      waterTemp: null,\n    };\n  },\n  methods: {\n    async fetchTemps() {\n      if (this.beach && this.beach.beach_name) {\n        try {\n          const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/temps/${this.beach.beach_name}`);\n          this.airTemp = response.data.air_temp;\n          this.waterTemp = response.data.water_temp;\n        } catch (error) {\n          console.error('Error fetching temperature data:', error);\n        }\n      }\n    },\n  },\n  watch: {\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchTemps();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;700&display=swap');\n\n* {\n  font-family: 'Plus Jakarta Sans', sans-serif;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;EADxCC,GAAA;AAAA;;EAKSD,KAAK,EAAC;AAAyB;;EAE/BA,KAAK,EAAC;AAAoB;;EAPnCC,GAAA;AAAA;;uBACEC,mBAAA,CAWM,OAXNC,UAWM,G,0BAVJC,mBAAA,CAAmE;IAA/DJ,KAAK,EAAC;EAAwC,GAAC,aAAW,sBACnDK,KAAA,CAAAC,OAAO,aAAaD,KAAA,CAAAE,SAAS,a,cAAxCL,mBAAA,CAKM,OARVM,UAAA,G,0BAIMJ,mBAAA,CAA8D;IAA3DJ,KAAK,EAAC;EAAiC,GAAC,iBAAe,sBAC1DI,mBAAA,CAAsD,KAAtDK,UAAsD,EAAAC,gBAAA,CAAhBL,KAAA,CAAAC,OAAO,IAAG,IAAE,iB,0BAClDF,mBAAA,CAAgE;IAA7DJ,KAAK,EAAC;EAAiC,GAAC,mBAAiB,sBAC5DI,mBAAA,CAAmD,KAAnDO,UAAmD,EAAAD,gBAAA,CAAlBL,KAAA,CAAAE,SAAS,IAAG,IAAE,gB,oBAEjDL,mBAAA,CAEM,OAXVU,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAUMT,mBAAA,CAAqC,WAAlC,gCAA8B,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}