{"ast":null,"code":"import Navbar from './AppNavbar.vue';\nimport BeachSelector from './BeachSelector.vue';\nimport DailyComponent from './DailyComponent.vue';\nimport WeeklyWaveComponent from './WeeklyWaveComponent.vue';\nimport BeachAndMapDisplay from './BeachAndMapDisplay.vue';\nexport default {\n  name: 'DashboardPage',\n  components: {\n    Navbar,\n    BeachSelector,\n    DailyComponent,\n    WeeklyWaveComponent,\n    BeachAndMapDisplay\n  },\n  data() {\n    return {\n      selectedBeach: null,\n      isLoading: false // New loading state\n    };\n  },\n  methods: {\n    async setSelectedBeach(beach) {\n      this.selectedBeach = beach;\n      this.isLoading = true; // Start loading\n      try {\n        // Simulate fetching or any delay\n        await this.fetchAllComponentsData(); // Replace with actual fetch functions if necessary\n      } finally {\n        this.isLoading = false; // Stop loading after fetching is done\n      }\n    },\n    async fetchAllComponentsData() {\n      // Add logic here to fetch any data for child components\n      return new Promise(resolve => setTimeout(resolve, 1000)); // Simulated delay\n    }\n  }\n};","map":{"version":3,"names":["Navbar","BeachSelector","DailyComponent","WeeklyWaveComponent","BeachAndMapDisplay","name","components","data","selectedBeach","isLoading","methods","setSelectedBeach","beach","fetchAllComponentsData","Promise","resolve","setTimeout"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/DashboardPage.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col\">\n    <!-- Navbar Component -->\n    <Navbar />\n\n    <!-- Full-width Beach Selector Component -->\n    <BeachSelector @beachSelected=\"setSelectedBeach\" class=\"w-full mb-3\" />\n\n    <div class=\"flex flex-col space-y-6 w-full relative\">\n      <!-- Loading Overlay -->\n      <div v-if=\"isLoading\" class=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-90 z-10\">\n        <div class=\"loader\"></div> <!-- Spinner -->\n        <p class=\"ml-4 text-lg font-semibold\">Loading...</p>\n      </div>\n\n      <!-- Left Column: BeachAndMapDisplay -->\n      <div class=\"w-full lg:w-1/5 p-4\">\n        <BeachAndMapDisplay v-if=\"selectedBeach\" :beach=\"selectedBeach.beach_name\" class=\"w-full\" />\n      </div>\n\n      <!-- Right Column: Main Content -->\n      <div class=\"flex flex-col w-full space-y-6\">\n        <DailyComponent v-if=\"selectedBeach\" :beach=\"selectedBeach\" class=\"w-full\" />\n        <WeeklyWaveComponent\n          v-if=\"selectedBeach\"\n          :key=\"selectedBeach.beach_name\"\n          :beach=\"selectedBeach.beach_name\"\n          :beachAngle=\"selectedBeach.beach_angle\"\n          class=\"w-full h-[600px]\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Navbar from './AppNavbar.vue';\nimport BeachSelector from './BeachSelector.vue';\nimport DailyComponent from './DailyComponent.vue';\nimport WeeklyWaveComponent from './WeeklyWaveComponent.vue';\nimport BeachAndMapDisplay from './BeachAndMapDisplay.vue';\n\nexport default {\n  name: 'DashboardPage',\n  components: {\n    Navbar,\n    BeachSelector,\n    DailyComponent,\n    WeeklyWaveComponent,\n    BeachAndMapDisplay,\n  },\n  data() {\n    return {\n      selectedBeach: null,\n      isLoading: false, // New loading state\n    };\n  },\n  methods: {\n    async setSelectedBeach(beach) {\n      this.selectedBeach = beach;\n      this.isLoading = true; // Start loading\n      try {\n        // Simulate fetching or any delay\n        await this.fetchAllComponentsData(); // Replace with actual fetch functions if necessary\n      } finally {\n        this.isLoading = false; // Stop loading after fetching is done\n      }\n    },\n    async fetchAllComponentsData() {\n      // Add logic here to fetch any data for child components\n      return new Promise((resolve) => setTimeout(resolve, 1000)); // Simulated delay\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Styling for loader and overlay */\n.loader {\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n/* Adjusted background opacity */\n.bg-opacity-90 {\n  background-color: rgba(255, 255, 255, 0.9); /* Increased opacity to 90% */\n}\n\n.absolute {\n  position: absolute;\n}\n\n.z-10 {\n  z-index: 10;\n}\n\n.flex {\n  display: flex;\n}\n</style>\n"],"mappings":"AAqCA,OAAOA,MAAK,MAAO,iBAAiB;AACpC,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,cAAa,MAAO,sBAAsB;AACjD,OAAOC,mBAAkB,MAAO,2BAA2B;AAC3D,OAAOC,kBAAiB,MAAO,0BAA0B;AAEzD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVN,MAAM;IACNC,aAAa;IACbC,cAAc;IACdC,mBAAmB;IACnBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAACC,KAAK,EAAE;MAC5B,IAAI,CAACJ,aAAY,GAAII,KAAK;MAC1B,IAAI,CAACH,SAAQ,GAAI,IAAI,EAAE;MACvB,IAAI;QACF;QACA,MAAM,IAAI,CAACI,sBAAsB,CAAC,CAAC,EAAE;MACvC,UAAU;QACR,IAAI,CAACJ,SAAQ,GAAI,KAAK,EAAE;MAC1B;IACF,CAAC;IACD,MAAMI,sBAAsBA,CAAA,EAAG;MAC7B;MACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}