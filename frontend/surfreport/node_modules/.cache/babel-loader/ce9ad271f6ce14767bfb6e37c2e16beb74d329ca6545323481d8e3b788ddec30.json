{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    beach: String // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      beachLat: null,\n      // Latitude of the beach\n      beachLong: null,\n      // Longitude of the beach\n      grayscaleStyle: [\n      // Grayscale style definition\n      {\n        featureType: 'all',\n        elementType: 'all',\n        stylers: [{\n          saturation: -100\n        }]\n      }]\n    };\n  },\n  mounted() {\n    this.fetchBeachData();\n    this.applyMapStyles();\n  },\n  methods: {\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachLat = beachData.lat;\n          this.beachLong = beachData.long;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    },\n    applyMapStyles() {\n      this.$nextTick(() => {\n        if (this.$refs.map && this.$refs.map.$mapObject) {\n          // Apply the grayscale style directly to the map instance\n          this.$refs.map.$mapObject.setOptions({\n            styles: this.grayscaleStyle\n          });\n        }\n      });\n    }\n  },\n  watch: {\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","beach","String","data","beachLat","beachLong","grayscaleStyle","featureType","elementType","stylers","saturation","mounted","fetchBeachData","applyMapStyles","methods","response","get","beachData","beaches","find","b","beach_name","lat","long","error","console","$nextTick","$refs","map","$mapObject","setOptions","styles","watch","immediate","handler"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/MapComponent.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 border rounded-lg w-full max-w-md text-center mt-4\">\n    <h3 class=\"text-xl mb-4\">Beach Location</h3>\n\n    <!-- Google Map with custom styling -->\n    <GMapMap\n      ref=\"map\"\n      :center=\"{ lat: beachLat, lng: beachLong }\"\n      :zoom=\"12\"\n      style=\"width: 100%; height: 400px\"\n    >\n      <GMapMarker :position=\"{ lat: beachLat, lng: beachLong }\" />\n    </GMapMap>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    beach: String, // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      beachLat: null, // Latitude of the beach\n      beachLong: null, // Longitude of the beach\n      grayscaleStyle: [ // Grayscale style definition\n        {\n          featureType: 'all',\n          elementType: 'all',\n          stylers: [{ saturation: -100 }],\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.fetchBeachData();\n    this.applyMapStyles();\n  },\n  methods: {\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachLat = beachData.lat;\n          this.beachLong = beachData.long;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    },\n    applyMapStyles() {\n      this.$nextTick(() => {\n        if (this.$refs.map && this.$refs.map.$mapObject) {\n          // Apply the grayscale style directly to the map instance\n          this.$refs.map.$mapObject.setOptions({ styles: this.grayscaleStyle });\n        }\n      });\n    },\n  },\n  watch: {\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Optional fallback for additional grayscale effect */\n.gmap-container {\n  -webkit-filter: grayscale(100%);\n  filter: grayscale(100%);\n}\n</style>\n"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM,CAAE;EACjB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MAAE;MAChBC,SAAS,EAAE,IAAI;MAAE;MACjBC,cAAc,EAAE;MAAE;MAChB;QACEC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,KAAK;QAClBC,OAAO,EAAE,CAAC;UAAEC,UAAU,EAAE,CAAC;QAAI,CAAC;MAChC,CAAC;IAEL,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,0EAA0E,CAAC;QAC5G,MAAMC,SAAQ,GAAIF,QAAQ,CAACZ,IAAI,CAACe,OAAO,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,UAAS,KAAM,IAAI,CAACpB,KAAK,CAAC;QAC9E,IAAIgB,SAAS,EAAE;UACb,IAAI,CAACb,QAAO,GAAIa,SAAS,CAACK,GAAG;UAC7B,IAAI,CAACjB,SAAQ,GAAIY,SAAS,CAACM,IAAI;QACjC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDX,cAAcA,CAAA,EAAG;MACf,IAAI,CAACa,SAAS,CAAC,MAAM;QACnB,IAAI,IAAI,CAACC,KAAK,CAACC,GAAE,IAAK,IAAI,CAACD,KAAK,CAACC,GAAG,CAACC,UAAU,EAAE;UAC/C;UACA,IAAI,CAACF,KAAK,CAACC,GAAG,CAACC,UAAU,CAACC,UAAU,CAAC;YAAEC,MAAM,EAAE,IAAI,CAACzB;UAAe,CAAC,CAAC;QACvE;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACD0B,KAAK,EAAE;IACL/B,KAAK,EAAE;MACLgC,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACtB,cAAc,CAAC,CAAC;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}