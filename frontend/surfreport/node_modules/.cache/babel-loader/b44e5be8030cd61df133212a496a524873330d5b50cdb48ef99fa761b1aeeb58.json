{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['px-3 py-1 rounded-lg text-sm font-semibold flex justify-center items-center', $options.gradeColorClass])\n  }, [_createElementVNode(\"span\", null, _toDisplayString($options.gradeText), 1)], 2);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","gradeColorClass","_createElementVNode","_toDisplayString","gradeText"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/GradeDisplay.vue"],"sourcesContent":["<template>\n  <div :class=\"['px-3 py-1 rounded-lg text-sm font-semibold flex justify-center items-center', gradeColorClass]\">\n    <span>{{ gradeText }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    grade: String // The grade is passed down from the parent\n  },\n  computed: {\n    // Compute the color class for the text and background based on the grade\n    gradeColorClass() {\n      return this.grade === 'green' ? 'text-green-700 bg-green-100' :\n             this.grade === 'yellow' ? 'text-yellow-700 bg-yellow-100' :\n             'text-red-700 bg-red-100';\n    },\n    // Compute the text label based on the grade\n    gradeText() {\n      return this.grade === 'green' ? 'Good' :\n             this.grade === 'yellow' ? 'Fair' :\n             'Poor';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Add any specific styling adjustments here if needed */\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAEM;IAFAC,KAAK,EADbC,eAAA,iFAC+FC,QAAA,CAAAC,eAAe;MAC1GC,mBAAA,CAA4B,cAAAC,gBAAA,CAAnBH,QAAA,CAAAI,SAAS,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}