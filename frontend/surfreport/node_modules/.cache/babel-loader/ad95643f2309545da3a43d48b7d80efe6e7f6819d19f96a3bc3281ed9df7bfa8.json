{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-6 border rounded-lg w-full max-w-md text-center mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"text-xl mb-4\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"mt-4\"\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h3\", _hoisted_2, \"Tide Information for \" + _toDisplayString($props.beach), 1 /* TEXT */), _createCommentVNode(\" Check if we have tide data \"), $data.tides.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h4\", {\n    class: \"text-lg mb-2\"\n  }, \"High Tides\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.highTides, tide => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: tide.time\n    }, _toDisplayString($options.formatTime(tide.time)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", {\n    class: \"text-lg mb-2\"\n  }, \"Low Tides\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.lowTides, tide => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: tide.time\n    }, _toDisplayString($options.formatTime(tide.time)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"No tide data available.\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$props","beach","_createCommentVNode","$data","tides","length","_hoisted_3","_Fragment","_renderList","$options","highTides","tide","time","formatTime","_hoisted_4","lowTides","_hoisted_5","_cache"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/TideComponent.vue"],"sourcesContent":["<template>\n    <div class=\"p-6 border rounded-lg w-full max-w-md text-center mt-4\">\n      <h3 class=\"text-xl mb-4\">Tide Information for {{ beach }}</h3>\n  \n      <!-- Check if we have tide data -->\n      <div v-if=\"tides.length > 0\">\n        <div>\n          <h4 class=\"text-lg mb-2\">High Tides</h4>\n          <ul>\n            <li v-for=\"tide in highTides\" :key=\"tide.time\">{{ formatTime(tide.time) }}</li>\n          </ul>\n        </div>\n  \n        <div class=\"mt-4\">\n          <h4 class=\"text-lg mb-2\">Low Tides</h4>\n          <ul>\n            <li v-for=\"tide in lowTides\" :key=\"tide.time\">{{ formatTime(tide.time) }}</li>\n          </ul>\n        </div>\n      </div>\n  \n      <div v-else>\n        <p>No tide data available.</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: {\n      beach: String,  // Beach name passed from the parent component\n    },\n    data() {\n      return {\n        tides: [],  // Stores the fetched tide data\n      };\n    },\n    computed: {\n      // Filter high tides\n      highTides() {\n        return this.tides.filter(tide => tide.type === 'high');\n      },\n      // Filter low tides\n      lowTides() {\n        return this.tides.filter(tide => tide.type === 'low');\n      },\n    },\n    methods: {\n      // Fetch tide data from the API\n      async fetchTides() {\n        try {\n          const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/tides/${this.beach}`);\n          this.tides = response.data.tides;\n        } catch (error) {\n          console.error('Error fetching tides:', error);\n        }\n      },\n      // Format the tide time for display\n      formatTime(time) {\n        const date = new Date(time);\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      },\n    },\n    watch: {\n      // Refetch the tides whenever the beach changes\n      beach: {\n        immediate: true,\n        handler() {\n          this.fetchTides();\n        },\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Basic styling for MVP */\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAwD;;EAC7DA,KAAK,EAAC;AAAc;;EAF9BC,GAAA;AAAA;;EAaaD,KAAK,EAAC;AAAM;;EAbzBC,GAAA;AAAA;;uBACIC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,CAA8D,MAA9DC,UAA8D,EAArC,uBAAqB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,KAAK,kBAEtDC,mBAAA,gCAAmC,EACxBC,KAAA,CAAAC,KAAK,CAACC,MAAM,Q,cAAvBV,mBAAA,CAcM,OAnBZW,UAAA,GAMQT,mBAAA,CAKM,c,0BAJJA,mBAAA,CAAwC;IAApCJ,KAAK,EAAC;EAAc,GAAC,YAAU,sBACnCI,mBAAA,CAEK,c,kBADHF,mBAAA,CAA+EY,SAAA,QAT3FC,WAAA,CAS+BC,QAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAfhB,mBAAA,CAA+E;MAAhDD,GAAG,EAAEiB,IAAI,CAACC;wBAASH,QAAA,CAAAI,UAAU,CAACF,IAAI,CAACC,IAAI;sCAI1Ef,mBAAA,CAKM,OALNiB,UAKM,G,0BAJJjB,mBAAA,CAAuC;IAAnCJ,KAAK,EAAC;EAAc,GAAC,WAAS,sBAClCI,mBAAA,CAEK,c,kBADHF,mBAAA,CAA8EY,SAAA,QAhB1FC,WAAA,CAgB+BC,QAAA,CAAAM,QAAQ,EAAhBJ,IAAI;yBAAfhB,mBAAA,CAA8E;MAAhDD,GAAG,EAAEiB,IAAI,CAACC;wBAASH,QAAA,CAAAI,UAAU,CAACF,IAAI,CAACC,IAAI;yDAK3EjB,mBAAA,CAEM,OAvBZqB,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAsBQpB,mBAAA,CAA8B,WAA3B,yBAAuB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}