{"ast":null,"code":"import axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default {\n  components: {\n    ApexChart: VueApexCharts\n  },\n  props: {\n    beach: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      tides: [],\n      // Stores the fetched tide data\n      chartSeries: [],\n      chartOptions: {}\n    };\n  },\n  computed: {\n    // Separate high and low tides\n    highTides() {\n      return this.tides.filter(tide => tide.type === 'high');\n    },\n    lowTides() {\n      return this.tides.filter(tide => tide.type === 'low');\n    }\n  },\n  methods: {\n    // Fetch tide data from the API\n    async fetchTides() {\n      if (this.beach) {\n        try {\n          const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/tides/${this.beach}`);\n          this.tides = response.data.tides;\n          this.setupChart();\n        } catch (error) {\n          console.error('Error fetching tides:', error);\n        }\n      }\n    },\n    // Set up the tide chart\n    setupChart() {\n      // Prepare data points for the chart\n      const tideData = this.tides.map(tide => ({\n        x: new Date(tide.time).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        y: tide.height\n      }));\n\n      // Configure chart series and options\n      this.chartSeries = [{\n        name: 'Tide Height',\n        data: tideData\n      }];\n      this.chartOptions = {\n        chart: {\n          type: 'line',\n          height: 200\n        },\n        stroke: {\n          curve: 'smooth',\n          // Creates a sine-like wave\n          width: 2\n        },\n        xaxis: {\n          type: 'category',\n          labels: {\n            rotate: -45\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Height (ft)'\n          }\n        },\n        tooltip: {\n          x: {\n            format: 'HH:mm' // Display time in tooltip\n          }\n        },\n        colors: ['#4A90E2']\n      };\n    },\n    // Format the tide time for display\n    formatTime(time) {\n      const date = new Date(time);\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  },\n  watch: {\n    // Refetch the tides whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchTides();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","VueApexCharts","components","ApexChart","props","beach","type","String","required","data","tides","chartSeries","chartOptions","computed","highTides","filter","tide","lowTides","methods","fetchTides","response","get","setupChart","error","console","tideData","map","x","Date","time","toLocaleTimeString","hour","minute","y","height","name","chart","stroke","curve","width","xaxis","labels","rotate","yaxis","title","text","tooltip","format","colors","formatTime","date","watch","immediate","handler"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/TideComponent.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-start\">\n    <h3 class=\"text-center text-lg font-semibold mb-6 whitespace-nowrap\">Current Tide</h3>\n    \n    <!-- Tide Chart -->\n    <div v-if=\"tides.length > 0\" class=\"w-full\">\n      <ApexChart\n        type=\"line\"\n        :options=\"chartOptions\"\n        :series=\"chartSeries\"\n        height=\"200\"\n      />\n    </div>\n\n    <!-- High and Low Tide Times -->\n    <div v-if=\"tides.length > 0\" class=\"mt-6\">\n      <div>\n        <p class=\"text-lg font-bold mb-2 whitespace-nowrap\">High Tides</p>\n        <ul class=\"text-gray-700\">\n          <li v-for=\"tide in highTides\" :key=\"tide.time\">{{ formatTime(tide.time) }}</li>\n        </ul>\n      </div>\n      <div class=\"mt-4\">\n        <p class=\"text-lg font-bold mb-2 whitespace-nowrap\">Low Tides</p>\n        <ul class=\"text-gray-700\">\n          <li v-for=\"tide in lowTides\" :key=\"tide.time\">{{ formatTime(tide.time) }}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div v-else>\n      <p>No tide data available.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\n\nexport default {\n  components: {\n    ApexChart: VueApexCharts,\n  },\n  props: {\n    beach: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      tides: [],  // Stores the fetched tide data\n      chartSeries: [],\n      chartOptions: {},\n    };\n  },\n  computed: {\n    // Separate high and low tides\n    highTides() {\n      return this.tides.filter(tide => tide.type === 'high');\n    },\n    lowTides() {\n      return this.tides.filter(tide => tide.type === 'low');\n    },\n  },\n  methods: {\n    // Fetch tide data from the API\n    async fetchTides() {\n      if (this.beach) {\n        try {\n          const response = await axios.get(`https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/tides/${this.beach}`);\n          this.tides = response.data.tides;\n          this.setupChart();\n        } catch (error) {\n          console.error('Error fetching tides:', error);\n        }\n      }\n    },\n    // Set up the tide chart\n    setupChart() {\n      // Prepare data points for the chart\n      const tideData = this.tides.map(tide => ({\n        x: new Date(tide.time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n        y: tide.height,\n      }));\n\n      // Configure chart series and options\n      this.chartSeries = [\n        {\n          name: 'Tide Height',\n          data: tideData,\n        },\n      ];\n\n      this.chartOptions = {\n        chart: {\n          type: 'line',\n          height: 200,\n        },\n        stroke: {\n          curve: 'smooth', // Creates a sine-like wave\n          width: 2,\n        },\n        xaxis: {\n          type: 'category',\n          labels: {\n            rotate: -45,\n          },\n        },\n        yaxis: {\n          title: {\n            text: 'Height (ft)',\n          },\n        },\n        tooltip: {\n          x: {\n            format: 'HH:mm', // Display time in tooltip\n          },\n        },\n        colors: ['#4A90E2'],\n      };\n    },\n    // Format the tide time for display\n    formatTime(time) {\n      const date = new Date(time);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    },\n  },\n  watch: {\n    // Refetch the tides whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchTides();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;700&display=swap');\n\n* {\n  font-family: 'Plus Jakarta Sans', sans-serif;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}