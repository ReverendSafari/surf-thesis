{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    lat: {\n      type: Number,\n      required: true\n    },\n    long: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      sunriseTime: '',\n      sunsetTime: ''\n    };\n  },\n  mounted() {\n    this.fetchSunriseSunset();\n  },\n  methods: {\n    async fetchSunriseSunset() {\n      try {\n        const response = await axios.get(`https://api.sunrise-sunset.org/json?lat=${this.lat}&lng=${this.long}&formatted=0`);\n        const {\n          sunrise,\n          sunset\n        } = response.data.results;\n        this.sunriseTime = this.formatTime(sunrise);\n        this.sunsetTime = this.formatTime(sunset);\n      } catch (error) {\n        console.error('Error fetching sunrise and sunset times:', error);\n      }\n    },\n    formatTime(utcTime) {\n      const date = new Date(utcTime);\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","props","lat","type","Number","required","long","data","sunriseTime","sunsetTime","mounted","fetchSunriseSunset","methods","response","get","sunrise","sunset","results","formatTime","error","console","utcTime","date","Date","toLocaleTimeString","hour","minute"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/SunriseSunsetComponent.vue"],"sourcesContent":["<!-- SunriseSunsetComponent.vue -->\n<template>\n    <div class=\"flex flex-col items-start\">\n      <h3 class=\"text-lg font-semibold mb-2\">Sunrise & Sunset</h3>\n      <i class=\"fa-solid fa-moon\" style=\"color: #1a5fb4;\"></i>\n      <p class=\"text-gray-700\"><strong>Sunrise:</strong> {{ sunriseTime }}</p>\n      <p class=\"text-gray-700\"><strong>Sunset:</strong> {{ sunsetTime }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    props: {\n      lat: {\n        type: Number,\n        required: true,\n      },\n      long: {\n        type: Number,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        sunriseTime: '',\n        sunsetTime: '',\n      };\n    },\n    mounted() {\n      this.fetchSunriseSunset();\n    },\n    methods: {\n      async fetchSunriseSunset() {\n        try {\n          const response = await axios.get(\n            `https://api.sunrise-sunset.org/json?lat=${this.lat}&lng=${this.long}&formatted=0`\n          );\n          const { sunrise, sunset } = response.data.results;\n          this.sunriseTime = this.formatTime(sunrise);\n          this.sunsetTime = this.formatTime(sunset);\n        } catch (error) {\n          console.error('Error fetching sunrise and sunset times:', error);\n        }\n      },\n      formatTime(utcTime) {\n        const date = new Date(utcTime);\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* You can add custom styles here */\n  </style>\n  "],"mappings":"AAWE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,IAAI,EAAE;MACJH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAC9B,2CAA2C,IAAI,CAACZ,GAAG,QAAQ,IAAI,CAACI,IAAI,cACtE,CAAC;QACD,MAAM;UAAES,OAAO;UAAEC;QAAO,IAAIH,QAAQ,CAACN,IAAI,CAACU,OAAO;QACjD,IAAI,CAACT,WAAU,GAAI,IAAI,CAACU,UAAU,CAACH,OAAO,CAAC;QAC3C,IAAI,CAACN,UAAS,GAAI,IAAI,CAACS,UAAU,CAACF,MAAM,CAAC;MAC3C,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IACDD,UAAUA,CAACG,OAAO,EAAE;MAClB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,OAAO,CAAC;MAC9B,OAAOC,IAAI,CAACE,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;IAC5E;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}