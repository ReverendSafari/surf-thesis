{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    beach: String // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      beachLat: null,\n      // Latitude of the beach\n      beachLong: null // Longitude of the beach\n    };\n  },\n  methods: {\n    // Fetch beach data to get latitude and longitude\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachLat = beachData.lat;\n          this.beachLong = beachData.long;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    }\n  },\n  watch: {\n    // Refetch the beach data whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","beach","String","data","beachLat","beachLong","methods","fetchBeachData","response","get","beachData","beaches","find","b","beach_name","lat","long","error","console","watch","immediate","handler"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/MapComponent.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 border rounded-lg w-full max-w-md mt-4\">\n    <h3 class=\"text-xl mb-4 heading-text\">Beach Location</h3>\n\n    <!-- Google Map -->\n    <GMapMap\n      :center=\"{ lat: beachLat, lng: beachLong }\"\n      :zoom=\"12\"\n      style=\"width: 100%; height: 400px\"\n    >\n      <GMapMarker :position=\"{ lat: beachLat, lng: beachLong }\" />\n    </GMapMap>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    beach: String,  // Beach name passed from the parent component\n  },\n  data() {\n    return {\n      beachLat: null,  // Latitude of the beach\n      beachLong: null, // Longitude of the beach\n    };\n  },\n  methods: {\n    // Fetch beach data to get latitude and longitude\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachLat = beachData.lat;\n          this.beachLong = beachData.long;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    },\n  },\n  watch: {\n    // Refetch the beach data whenever the beach changes\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@400&display=swap');\n\n.heading-text {\n  text-align: left;\n  font-family: 'Rubik', sans-serif;\n  color: black;\n}\n</style>\n"],"mappings":"AAgBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM,CAAG;EAClB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MAAG;MACjBC,SAAS,EAAE,IAAI,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,0EAA0E,CAAC;QAC5G,MAAMC,SAAQ,GAAIF,QAAQ,CAACL,IAAI,CAACQ,OAAO,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,UAAS,KAAM,IAAI,CAACb,KAAK,CAAC;QAC9E,IAAIS,SAAS,EAAE;UACb,IAAI,CAACN,QAAO,GAAIM,SAAS,CAACK,GAAG;UAC7B,IAAI,CAACV,SAAQ,GAAIK,SAAS,CAACM,IAAI;QACjC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF,CAAC;EACDE,KAAK,EAAE;IACL;IACAlB,KAAK,EAAE;MACLmB,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACd,cAAc,CAAC,CAAC;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}