{"ast":null,"code":"import TemperatureComponent from './TemperatureComponent.vue';\nimport TideComponent from './TideComponent.vue';\nimport CurrentWaveComponent from './CurrentWaveComponent.vue';\nimport CurrentWindComponent from './CurrentWindComponent.vue';\nimport SunriseSunsetComponent from './SunriseSunsetComponent.vue';\nexport default {\n  components: {\n    TemperatureComponent,\n    TideComponent,\n    CurrentWaveComponent,\n    CurrentWindComponent,\n    SunriseSunsetComponent\n  },\n  props: {\n    beach: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    formattedDate() {\n      const now = new Date();\n      const options = {\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      return now.toLocaleString('en-US', options); // Adjust locale as needed\n    },\n    isMobile() {\n      return window.innerWidth < 1024; // Tailwind's \"lg\" breakpoint\n    }\n  },\n  mounted() {\n    window.addEventListener('resize', this.updateIsMobile);\n    this.updateIsMobile(); // Set the initial state\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.updateIsMobile);\n  },\n  methods: {\n    updateIsMobile() {\n      this.$forceUpdate(); // Rerender component on viewport resize\n    }\n  }\n};","map":{"version":3,"names":["TemperatureComponent","TideComponent","CurrentWaveComponent","CurrentWindComponent","SunriseSunsetComponent","components","props","beach","type","Object","required","computed","formattedDate","now","Date","options","month","day","hour","minute","toLocaleString","isMobile","window","innerWidth","mounted","addEventListener","updateIsMobile","beforeUnmount","removeEventListener","methods","$forceUpdate"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/DailyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 border rounded-lg bg-white shadow-md h-full\">\n    <!-- Title Section -->\n    <div class=\"mb-4\">\n      <h2 class=\"text-xl text-center font-semibold text-gray-800\">\n        Daily Waves - {{ formattedDate }}\n      </h2>\n    </div>\n\n    <!-- Grid Content -->\n    <div\n      class=\"grid gap-6 h-full\"\n      :class=\"{\n        'grid-cols-5': !isMobile,\n        'grid-cols-1': isMobile,\n      }\"\n    >\n      <!-- Temperature Component -->\n      <div class=\"lg:border-r lg:pr-6\">\n        <TemperatureComponent :beach=\"beach\" />\n      </div>\n\n      <hr v-if=\"isMobile\" class=\"border-gray-300 w-full my-2\" />\n\n      <!-- Tide Component -->\n      <div class=\"lg:border-r lg:pr-6\">\n        <TideComponent :beach=\"beach\" />\n      </div>\n\n      <hr v-if=\"isMobile\" class=\"border-gray-300 w-full my-2\" />\n\n      <!-- Wave Component -->\n      <div class=\"lg:border-r lg:pr-6\">\n        <CurrentWaveComponent :beach=\"beach\" />\n      </div>\n\n      <hr v-if=\"isMobile\" class=\"border-gray-300 w-full my-2\" />\n\n      <!-- Wind Component -->\n      <div class=\"lg:border-r lg:pr-6\">\n        <CurrentWindComponent :beach=\"beach\" />\n      </div>\n\n      <hr v-if=\"isMobile\" class=\"border-gray-300 w-full my-2\" />\n\n      <!-- SunriseSunset Component -->\n      <div>\n        <SunriseSunsetComponent :lat=\"beach.lat\" :long=\"beach.long\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TemperatureComponent from './TemperatureComponent.vue';\nimport TideComponent from './TideComponent.vue';\nimport CurrentWaveComponent from './CurrentWaveComponent.vue';\nimport CurrentWindComponent from './CurrentWindComponent.vue';\nimport SunriseSunsetComponent from './SunriseSunsetComponent.vue';\n\nexport default {\n  components: {\n    TemperatureComponent,\n    TideComponent,\n    CurrentWaveComponent,\n    CurrentWindComponent,\n    SunriseSunsetComponent,\n  },\n  props: {\n    beach: {\n      type: Object,\n      required: true,\n    },\n  },\n  computed: {\n    formattedDate() {\n      const now = new Date();\n      const options = { month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n      return now.toLocaleString('en-US', options); // Adjust locale as needed\n    },\n    isMobile() {\n      return window.innerWidth < 1024; // Tailwind's \"lg\" breakpoint\n    },\n  },\n  mounted() {\n    window.addEventListener('resize', this.updateIsMobile);\n    this.updateIsMobile(); // Set the initial state\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.updateIsMobile);\n  },\n  methods: {\n    updateIsMobile() {\n      this.$forceUpdate(); // Rerender component on viewport resize\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;700&display=swap');\n\n* {\n  font-family: 'Plus Jakarta Sans', sans-serif;\n}\n\n.h-full {\n  height: 100%; /* Ensure component fills the available height */\n}\n\n.grid {\n  align-items: start; /* Align grid items to start of rows */\n}\n</style>\n"],"mappings":"AAsDA,OAAOA,oBAAmB,MAAO,4BAA4B;AAC7D,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,oBAAmB,MAAO,4BAA4B;AAC7D,OAAOC,oBAAmB,MAAO,4BAA4B;AAC7D,OAAOC,sBAAqB,MAAO,8BAA8B;AAEjE,eAAe;EACbC,UAAU,EAAE;IACVL,oBAAoB;IACpBC,aAAa;IACbC,oBAAoB;IACpBC,oBAAoB;IACpBC;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,OAAM,GAAI;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;MACrF,OAAON,GAAG,CAACO,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC,EAAE;IAC/C,CAAC;IACDM,QAAQA,CAAA,EAAG;MACT,OAAOC,MAAM,CAACC,UAAS,GAAI,IAAI,EAAE;IACnC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,cAAc,CAAC;IACtD,IAAI,CAACA,cAAc,CAAC,CAAC,EAAE;EACzB,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdL,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,cAAc,CAAC;EAC3D,CAAC;EACDG,OAAO,EAAE;IACPH,cAAcA,CAAA,EAAG;MACf,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}