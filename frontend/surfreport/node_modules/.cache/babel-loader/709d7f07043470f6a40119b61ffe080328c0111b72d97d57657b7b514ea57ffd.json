{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  props: [\"onBeachSelect\"],\n  // Renamed prop to avoid conflict\n  data() {\n    return {\n      beaches: [],\n      selectedBeach: null\n    };\n  },\n  methods: {\n    async fetchBeaches() {\n      try {\n        const response = await axios.get(\"https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches\");\n        this.beaches = response.data.beaches;\n        if (this.beaches.length > 0) {\n          const queryBeachName = this.$route.query.beach;\n\n          // Match query parameter with the beach list, or default to the first beach\n          const matchedBeach = this.beaches.find(beach => beach.beach_name === queryBeachName);\n          this.selectedBeach = matchedBeach || this.beaches[0];\n\n          // Emit the selected beach to ensure dashboard receives it\n          this.$emit(\"beachSelected\", this.selectedBeach);\n        }\n      } catch (error) {\n        console.error(\"Error fetching beaches:\", error);\n      }\n    },\n    onBeachSelected() {\n      if (this.selectedBeach) {\n        this.$emit(\"beachSelected\", this.selectedBeach);\n        this.$router.replace({\n          query: {\n            beach: this.selectedBeach.beach_name\n          }\n        });\n      }\n    }\n  },\n  mounted() {\n    this.fetchBeaches();\n  }\n};","map":{"version":3,"names":["axios","props","data","beaches","selectedBeach","methods","fetchBeaches","response","get","length","queryBeachName","$route","query","beach","matchedBeach","find","beach_name","$emit","error","console","onBeachSelected","$router","replace","mounted"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/AppNavbar.vue"],"sourcesContent":["<template>\n  <nav class=\"bg-blue-500 text-white p-4 flex flex-wrap items-center justify-between\">\n    <!-- Logo -->\n    <div class=\"text-lg font-bold\">SwellSeeker</div>\n\n    <!-- Responsive Beach Selector -->\n    <div class=\"w-full md:w-auto mt-4 md:mt-0 md:ml-4\">\n      <select\n        v-if=\"beaches.length > 0\"\n        v-model=\"selectedBeach\"\n        @change=\"onBeachSelected\"\n        class=\"bg-white text-gray-700 pl-4 pr-4 py-2 border rounded-lg shadow-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      >\n        <option v-for=\"beach in beaches\" :key=\"beach.beach_name\" :value=\"beach\">\n          {{ beach.beach_name }} ({{ beach.town }})\n        </option>\n      </select>\n      <div v-else class=\"text-gray-700 text-sm\">Loading beaches...</div>\n    </div>\n  </nav>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  props: [\"onBeachSelect\"], // Renamed prop to avoid conflict\n  data() {\n    return {\n      beaches: [],\n      selectedBeach: null,\n    };\n  },\n  methods: {\n    async fetchBeaches() {\n  try {\n    const response = await axios.get(\n      \"https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches\"\n    );\n    this.beaches = response.data.beaches;\n\n    if (this.beaches.length > 0) {\n      const queryBeachName = this.$route.query.beach;\n\n      // Match query parameter with the beach list, or default to the first beach\n      const matchedBeach = this.beaches.find(\n        (beach) => beach.beach_name === queryBeachName\n      );\n      this.selectedBeach = matchedBeach || this.beaches[0];\n\n      // Emit the selected beach to ensure dashboard receives it\n      this.$emit(\"beachSelected\", this.selectedBeach);\n    }\n  } catch (error) {\n    console.error(\"Error fetching beaches:\", error);\n  }\n}\n,\n    onBeachSelected() {\n      if (this.selectedBeach) {\n        this.$emit(\"beachSelected\", this.selectedBeach);\n        this.$router.replace({ query: { beach: this.selectedBeach.beach_name } });\n      }\n    },\n  },\n  mounted() {\n    this.fetchBeaches();\n  },\n};\n</script>\n\n<style scoped>\n/* Basic navbar styling */\n.bg-blue-500 {\n  background-color: #0077b6;\n}\n</style>\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,eAAe,CAAC;EAAE;EAC1BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAC9B,0EACF,CAAC;QACD,IAAI,CAACL,OAAM,GAAII,QAAQ,CAACL,IAAI,CAACC,OAAO;QAEpC,IAAI,IAAI,CAACA,OAAO,CAACM,MAAK,GAAI,CAAC,EAAE;UAC3B,MAAMC,cAAa,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK;;UAE9C;UACA,MAAMC,YAAW,GAAI,IAAI,CAACX,OAAO,CAACY,IAAI,CACnCF,KAAK,IAAKA,KAAK,CAACG,UAAS,KAAMN,cAClC,CAAC;UACD,IAAI,CAACN,aAAY,GAAIU,YAAW,IAAK,IAAI,CAACX,OAAO,CAAC,CAAC,CAAC;;UAEpD;UACA,IAAI,CAACc,KAAK,CAAC,eAAe,EAAE,IAAI,CAACb,aAAa,CAAC;QACjD;MACF,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;IAEIE,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAChB,aAAa,EAAE;QACtB,IAAI,CAACa,KAAK,CAAC,eAAe,EAAE,IAAI,CAACb,aAAa,CAAC;QAC/C,IAAI,CAACiB,OAAO,CAACC,OAAO,CAAC;UAAEV,KAAK,EAAE;YAAEC,KAAK,EAAE,IAAI,CAACT,aAAa,CAACY;UAAW;QAAE,CAAC,CAAC;MAC3E;IACF;EACF,CAAC;EACDO,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}