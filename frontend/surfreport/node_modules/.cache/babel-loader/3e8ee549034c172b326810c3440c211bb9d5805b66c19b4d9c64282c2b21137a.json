{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    beach: String\n  },\n  data() {\n    return {\n      beachLat: null,\n      beachLong: null,\n      mapOptions: {\n        disableDefaultUI: true,\n        mapTypeControl: false,\n        streetViewControl: false\n      }\n    };\n  },\n  mounted() {\n    this.fetchBeachData();\n  },\n  methods: {\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachLat = beachData.lat;\n          this.beachLong = beachData.long;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    }\n  },\n  watch: {\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","props","beach","String","data","beachLat","beachLong","mapOptions","disableDefaultUI","mapTypeControl","streetViewControl","mounted","fetchBeachData","methods","response","get","beachData","beaches","find","b","beach_name","lat","long","error","console","watch","immediate","handler"],"sources":["/home/safari/thesis/frontend/surfreport/src/components/MapComponent.vue"],"sourcesContent":["<template>\n  <div class=\"p-6 border rounded-lg w-full max-w-md text-center mt-4\">\n    <h3 class=\"text-xl mb-4\">Beach Location</h3>\n\n    <!-- Map wrapper with fixed styling applied via CSS -->\n    <div class=\"map-container\">\n      <GMapMap\n        ref=\"map\"\n        :center=\"{ lat: beachLat, lng: beachLong }\"\n        :zoom=\"12\"\n        :options=\"mapOptions\"\n      >\n        <GMapMarker :position=\"{ lat: beachLat, lng: beachLong }\" />\n      </GMapMap>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: {\n    beach: String,\n  },\n  data() {\n    return {\n      beachLat: null,\n      beachLong: null,\n      mapOptions: {\n        disableDefaultUI: true,\n        mapTypeControl: false,\n        streetViewControl: false,\n      },\n    };\n  },\n  mounted() {\n    this.fetchBeachData();\n  },\n  methods: {\n    async fetchBeachData() {\n      try {\n        const response = await axios.get('https://3k7dz8sjwk.execute-api.us-east-2.amazonaws.com/TestStage/beaches');\n        const beachData = response.data.beaches.find(b => b.beach_name === this.beach);\n        if (beachData) {\n          this.beachLat = beachData.lat;\n          this.beachLong = beachData.long;\n        }\n      } catch (error) {\n        console.error('Error fetching beach data:', error);\n      }\n    },\n  },\n  watch: {\n    beach: {\n      immediate: true,\n      handler() {\n        this.fetchBeachData();\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.map-container {\n  width: 100%;\n  height: 400px;\n}\n</style>\n"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAEC;EACT,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE;QACVC,gBAAgB,EAAE,IAAI;QACtBC,cAAc,EAAE,KAAK;QACrBC,iBAAiB,EAAE;MACrB;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,0EAA0E,CAAC;QAC5G,MAAMC,SAAQ,GAAIF,QAAQ,CAACV,IAAI,CAACa,OAAO,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,UAAS,KAAM,IAAI,CAAClB,KAAK,CAAC;QAC9E,IAAIc,SAAS,EAAE;UACb,IAAI,CAACX,QAAO,GAAIW,SAAS,CAACK,GAAG;UAC7B,IAAI,CAACf,SAAQ,GAAIU,SAAS,CAACM,IAAI;QACjC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF,CAAC;EACDE,KAAK,EAAE;IACLvB,KAAK,EAAE;MACLwB,SAAS,EAAE,IAAI;MACfC,OAAOA,CAAA,EAAG;QACR,IAAI,CAACf,cAAc,CAAC,CAAC;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}